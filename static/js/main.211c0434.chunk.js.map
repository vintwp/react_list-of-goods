{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAplhabet","setState","ALPHABET","sortByLength","LENGTH","sortReverse","prevState","handleReset","this","visibleGoods","sort","p1","p2","localeCompare","length","reverse","className","type","classNames","onClick","map","product","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAWE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,YAAc,WACZ,EAAKJ,UAAS,SAAAK,GAAS,MAAK,CAAET,YAAaS,EAAUT,gBAfzD,EAkBEU,YAAc,WACZ,EAAKN,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QArBzB,4CAyBE,WACE,MAAiCS,KAAKZ,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZY,EAAY,UAAOf,GAiBzB,OAfAe,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQd,GACN,KAAKL,EAASS,SACZ,OAAOS,EAAGE,cAAcD,GAC1B,KAAKnB,EAASW,OACZ,OAAOO,EAAGG,OAASF,EAAGE,OACxB,QACE,OAAO,MAITjB,GACFY,EAAaM,UAIb,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYpB,IAAaL,EAASS,WAEtCiB,QAASX,KAAKR,eAPhB,iCAYA,wBACEiB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYpB,IAAaL,EAASW,SAEtCe,QAASX,KAAKL,aAPhB,4BAYA,wBACEc,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAarB,IAEjBsB,QAASX,KAAKH,YAPhB,sBAWER,GAAcC,IAAaL,EAASM,OACpC,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QAASX,KAAKD,YAHhB,sBAUJ,oBAAIS,UAAU,YAAd,SACGP,EAAaW,KAAI,SAAAC,GAAO,OACvB,oBAAkB,UAAQ,OAA1B,SACGA,GADMA,eA/FrB,GAAyBC,aC1BzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.211c0434.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'NONE',\n  ALPHABET = 'APLHABET',\n  LENGTH = 'LENGTH',\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAplhabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  sortReverse = () => {\n    this.setState(prevState => ({ isReversed: !prevState.isReversed }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const visibleGoods = [...goodsFromServer];\n\n    visibleGoods.sort((p1, p2) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return p1.localeCompare(p2);\n        case SortType.LENGTH:\n          return p1.length - p2.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortByAplhabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.sortReverse}\n          >\n            Reverse\n          </button>\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul className=\"GoodsList\">\n          {visibleGoods.map(product => (\n            <li key={product} data-cy=\"Good\">\n              {product}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}